# VirtualBox
# Vagrant
# Cmder

# No diretório assets, (onde está o arquivo vagrantile) abrir o terminal e:
$ vagrant up

# Acessar a VM via SSH
$ vagrant ssh

# Caso apresente erro de SSH, setar o SSH embarcado ao Vagrant
$ set VAGRANT_PREFER_SYSTEM_BIN=0

# Atualização de pacotes
$ sudo apt-get update && sudo apt-get upgrade -y

# Instalar o Grafana
  # 1- Instalar Docker
      $ curl -fsSL https://get.docker.com -o get-docker.sh
      $ sudo sh get-docker.sh

  # Usuários
    2- $ sudo usermod -aG docker vagrant
       # Fazer logoff

  # Criar volume para persistência dos dados do grafana
    3- $ mkdir -p volumes/grafana

  # Criar uma rede para o Grafana
    3- $ docker network create grafana-net

  # Pegar o id do usuário por questões de permissão do docker e subir o container
    4- $ ID=$(id -u)
    5- $ docker run -d --user $ID -v /home/vagrant/volumes/grafana/:/var/lib/grafana -p 3000:3000 --name=grafana --network=grafana-net grafana/grafana

#################################################

# Instalar um banco de dados de séries temporais (TSDB)

# Criar diretório do influx
$ mkdir volumes/influxdb

# Criar container do influx via Docker
$ docker run -d -v /home/vagrant/volumes/influxdb/:/var/lib/influxdb -p 8083:8083 -p 8086:8086 -p 25826:25826/udp --name=influxdb --network=grafana-net influxdb:1.0

# Telegraf (coletor de dados)

# Instalar o Telegraf

  # 1- Adicionar a chave e repositório
      $ wget -qO- https://repos.influxdata.com/influxdb.key | sudo apt-key add -
      $ source /etc/lsb-release
      $ echo "deb https://repos.influxdata.com/${DISTRIB_ID,,} ${DISTRIB_CODENAME} stable" | sudo tee /etc/apt/sources.list.d/influxdb.list

  # 2- Atualização do ubuntu e instalação de pacotes necessários
      $ sudo apt-get update && sudo apt-get install apt-transport-https

  # 3- Instalar o Telegraf
      $ sudo apt-get install telegraf

  # 4- Verificar status
      $ sudo service telegraf status

  # 5- Conectar no container do banco (influx)
      $ docker exec -it influxdb bash

  # 6- Conectar no influx
      $ influx

  # 7- Visualizar as bases no influx, base telegraf e checar métricas
      $ show databases
      $ use telegraf
      $ show measurements

#################################################

# Configurar o data source no Grafana:

Configuration > Data Sources > Add data source > InfluxDB
Name: InfluxDB
URL: http://192.168.33.10:8086
Access: Browser
Database: telegraf
Save & Test

# Ler a primeira métrica em um dashboard:

Create > Dashboard > Configurações
General > Name: Aula 2 - Como armazenar as métricas
Variables > Type: Query
Variables > Name: server
Variables > Type: Query
Variables > Data source: InfluxDB
Variables > Query: SHOW TAG VALUES FROM system WITH KEY=host
New Panel > Add Query

#################################################

# Monitorar as instâncias do Docker

  # Colocar o usuário telegraf dentro do grupo do docker
    1- $ sudo usermod -aG docker telegraf

  # Editar o arquivo de configuração
    1- $ sudo vi /etc/telegraf/telegraf.conf
       # Remover o comentário das seguintes linhas para o Docker:	
          [[inputs.docker]]
   	  endpoint = "unix:///var/run/docker.sock"
   	  container_names = []
   	  container_name_include = []
   	  container_name_exclude = []
   	  timeout = "5s"
   	  total = false
       # Esc, :x para salvar e sair
       # Reiniciar o serviço do Telegraf
       $ sudo service telegraf restart
       $ sudo service telegraf status

#################################################

    # Visualizar as bases no influx, base telegraf e checar métricas
      $ docker exec -ti influxdb bash
      $ influx
      $ show databases
      $ use telegraf
      $ show measurements

#################################################

# Instalar o Apache
$ sudo apt-get install apache2 -y

# No navegador acesse http://192.168.33.10/

# Visualizar o access log
$ sudo cat /var/log/apache2/access.log

# Permitir que o telegraf acesse os logs
  $ sudo usermod -aG adm telegraf

  # Editar o arquivo de configuração
    1- $ sudo vi /etc/telegraf/telegraf.conf
       # Remover o comentário das seguintes linhas para o Docker:
         [[inputs.logparser]]
	 files e adicionar o 2 no apache (caminho do arquivo de log do apache)
	 from_begining = false e alterar para true
	 [inputs.logparser.grok]
	 patterns
	 measurement
	 # Esc, :x para salvar e sair
         # Reiniciar o serviço do Telegraf
         $ sudo service telegraf restart
         $ sudo service telegraf status
	 
         $ docker exec -ti influxdb bash
	 $ influx
         $ show databases
         $ use telegraf
         $ show measurements

#################################################

Para criar o painel Erros 404 siga os passos abaixo:

1) Clique no botão Add panel;

2) Em seguida clique em Add Query, logo na parte superior temos que deixar a opção server com valor ubuntu-bionic;

3) Agora no campo Query selecione a opção InfluxDB;

4) Logo abaixo no campo A (onde tem a consulta em si, com os campos FROM, WHERE, SELECT, GROUP BY), clique no botão com ícone lápis (nome do campo é: Toggle text edit mode) que fica no lado direito, para podermos ir para o modo de edição de texto;

SHOW TAG VALUES WITH KEY = "resp_code" WHERE host =~ /^$server$/

5) No campo de texto que aparecer, devemos ver uma consulta padrão semelhante a essa:
$ SELECT mean("value") FROM "measurement" WHERE $timeFilter GROUP BY time($__interval) fill(null)

Altere essa consulta para:
$ SELECT count("request") FROM "apache_access_log" WHERE ("host" =~ /^$server$/)  AND "resp_code" = '404'  AND $timeFilter AND "agent" != 'Go-http-client/1.1' AND agent != 'worldping-api'

6) Agora clique na opção Visualization, e no seletor Visualization selecione a opção Gauge;

7) No campo Calc do painel Display selecione a opção Total;

8) No campo Unit no painel Field selecione a opção Misc e depois a opção none (dentro de Misc);

9) No campo Min que fica logo abaixo do campo Unit, digite 0 (zero);

10) Agora na opção General no campo Title coloque o nome Erros 404;

11) Pronto, agora é só voltar para o Dashboard e você vai poder visualizar o novo painel Erros 404.

#################################################